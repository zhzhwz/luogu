#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

int dp[49][49][49][49];
int score[359];

int main(){
    int n, m;
    scanf("%d %d", &n, &m);
    int num[5] = {0};
    for(int i = 0;i < n;++i) scanf("%d", &score[i]);
    for(int i = 0;i < m;++i){
        int x;
        scanf("%d", &x);
        ++num[x];
    }
    memset(dp, 0xc0, sizeof(dp));
    dp[0][0][0][0] = score[0];
    int ii[5];
    for(ii[1] = 0;ii[1] <= num[1];++ii[1]){
        for(ii[2] = 0;ii[2] <= num[2];++ii[2]){
            for(ii[3] = 0;ii[3] <= num[3];++ii[3]){
                for(ii[4] = 0;ii[4] <= num[4];++ii[4]){
                    for(int i = 1;i <= 4;++i){
                        int next = ii[1] * 1 + ii[2] * 2 + ii[3] * 3 + ii[4] * 4 + i;
                        if(ii[i] + 1 <= num[i]){
                                 if(i == 1) dp[ii[1] + 1][ii[2]][ii[3]][ii[4]] = max(dp[ii[1] + 1][ii[2]][ii[3]][ii[4]], dp[ii[1]][ii[2]][ii[3]][ii[4]] + score[next]);
                            else if(i == 2) dp[ii[1]][ii[2] + 1][ii[3]][ii[4]] = max(dp[ii[1]][ii[2] + 1][ii[3]][ii[4]], dp[ii[1]][ii[2]][ii[3]][ii[4]] + score[next]);
                            else if(i == 3) dp[ii[1]][ii[2]][ii[3] + 1][ii[4]] = max(dp[ii[1]][ii[2]][ii[3] + 1][ii[4]], dp[ii[1]][ii[2]][ii[3]][ii[4]] + score[next]);
                            else            dp[ii[1]][ii[2]][ii[3]][ii[4] + 1] = max(dp[ii[1]][ii[2]][ii[3]][ii[4] + 1], dp[ii[1]][ii[2]][ii[3]][ii[4]] + score[next]);
                        }
                    }
                }
            }
        }
    }
    printf("%d\n", dp[num[1]][num[2]][num[3]][num[4]]);
    return 0;
}
